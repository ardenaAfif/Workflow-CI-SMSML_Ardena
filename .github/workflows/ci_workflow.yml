name: CI Model Retraining and Docker Build

on:
  push:
    branches:
      - main 
    paths:
      # Trigger jika ada perubahan di dalam folder MLflow Project atau workflow ini sendiri
      - 'MLProject/**' 
      - '.github/workflows/ci_workflow.yml'


jobs:
  # Job pertama: Melatih ulang model menggunakan MLflow Project
  retrain_and_log_model:
    name: Retrain Model with MLflow Project
    runs-on: ubuntu-latest # Menjalankan job pada runner Ubuntu terbaru
    defaults:
      run:
        working-directory: ./MLProject 

    steps:
      - name: Checkout Repository
        # Mengunduh kode dari repository Anda ke runner
        uses: actions/checkout@v4

      - name: Set up Python (untuk MLflow CLI dan DagsHub client)
        # Versi Python ini sebaiknya konsisten dengan yang Anda gunakan untuk pengembangan
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Sesuaikan dengan versi di conda.yaml Anda

      - name: Install MLflow and DagsHub Client
        run: |
          python -m pip install --upgrade pip
          pip install mlflow>=2.1 dagshub>=0.3 # Pastikan versi sesuai dengan kebutuhan Anda

      - name: Run MLflow Project
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKEN }} # Rekomendasi DagsHub
        run: |
          echo "Current directory before mlflow run: $(pwd)"
          echo "Listing files in current directory: $(ls -la)"
          echo "Running MLflow Project..."
          # Menjalankan MLflow Project. MLflow akan membaca MLproject dan conda.yaml.
          # Parameter bisa di-override di sini jika perlu, atau biarkan default dari MLproject.
          # Pastikan parameter --dagshub_user dan --dagshub_repo sesuai.
          # Jika Anda menggunakan GitHub Variables untuk ini (non-sensitif):
          # mlflow run . -P tracking_mode="dagshub" \
          #              -P dagshub_user="${{ vars.DAGSHUB_USERNAME_VAR || 'ardenaAfif' }}" \
          #              -P dagshub_repo="${{ vars.DAGSHUB_REPO_NAME_VAR || 'SMSML_Ardena-Afif' }}" \
          #              -P experiment_name="Shopping_Trends_CI_Retraining_GitHubActions"
          # Jika username/repo sudah benar di MLproject, Anda bisa menyederhanakannya:
          mlflow run . -P tracking_mode="dagshub" -P experiment_name="Shopping_Trends_CI_GitHubActions"

  # Job kedua: Membangun dan mendorong image Docker
  build_and_push_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    needs: retrain_and_log_model 
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./MLProject
          file: ./MLProject/Dockerfile
          push: true # Set ke true untuk mendorong image setelah build berhasil
          tags: | # Daftar tag untuk image
            ${{ secrets.DOCKERHUB_USERNAME }}/shopping-trends-model:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/shopping-trends-model:${{ github.sha }} 
            # Menambahkan tag dengan SHA commit untuk versioning
          build-args: |
            ARG_NAME=value
