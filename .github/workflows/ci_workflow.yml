name: CI Workflow for Shopping Trends

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  MLFLOW_EXPERIMENT_NAME: "Shopping_Trends_CI"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    - name: ⬇️ Checkout Repository
      uses: actions/checkout@v3

    - name: 🐍 Set up Python 3.12.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.7'

    - name: 🔍 Check Python & Pip Version
      run: |
        python --version
        pip --version

    - name: 📦 Install Dependencies
      run: |
        pip install -r ./MLProject/requirements.txt
        pip install --upgrade "mlflow==2.19.0" dagshub scikit-learn pandas matplotlib seaborn
        echo "============================================"
        echo "VERSI MLFLOW YANG TERINSTAL:"
        pip show mlflow
        echo "============================================"

    - name: 🚀 Run MLflow Project
      run: |
        mlflow run ./MLProject \
          --env-manager=local \
          -P data_file=processed_shopping_trends.csv \
          -P experiment_name=${{ env.MLFLOW_EXPERIMENT_NAME }} \
          -P n_estimators=100 \
          -P max_depth=None \
          -P min_samples_split=2 \
          -P min_samples_leaf=1 \
          -P class_weight=None \
          -P run_name=RF_CI_Classifier_Run

    - name: 🆔 Get MLflow Experiment ID and Latest Run ID
      id: get_ids
      shell: bash
      run: |
        echo "Target MLflow Experiment Name: ${{ env.MLFLOW_EXPERIMENT_NAME }}"
        
        EXPERIMENT_JSON=$(mlflow experiments search --filter "name='${{ env.MLFLOW_EXPERIMENT_NAME }}'" --output-format json)
        echo "Experiment search result: ${EXPERIMENT_JSON}"
        EXPERIMENT_ID=$(echo "${EXPERIMENT_JSON}" | jq -r '.[0].experiment_id') # .[0] karena search bisa mengembalikan array
        
        if [[ -z "$EXPERIMENT_ID" || "$EXPERIMENT_ID" == "null" ]]; then
          echo "Error: Experiment '${{ env.MLFLOW_EXPERIMENT_NAME }}' not found or ID is null."
          echo "Listing all experiments:"
          mlflow experiments list --view ALL # Tambahkan --view ALL untuk melihat eksperimen yang mungkin terhapus
          exit 1
        fi
        echo "EXPERIMENT_ID=${EXPERIMENT_ID}" >> $GITHUB_ENV
        echo "Found Experiment ID: ${EXPERIMENT_ID}"

        # Bagian untuk mendapatkan RUN_ID seharusnya sudah benar
        RUN_JSON=$(mlflow runs list --experiment-id "${EXPERIMENT_ID}" --order-by "attributes.start_time DESC" --output-format json)
        echo "Run list result for experiment ${EXPERIMENT_ID}: ${RUN_JSON}"
        RUN_ID=$(echo "${RUN_JSON}" | jq -r '.[0].info.run_id')

        if [[ -z "$RUN_ID" || "$RUN_ID" == "null" ]]; then
          echo "Error: No runs found for Experiment ID '${EXPERIMENT_ID}' or Run ID is null."
          mlflow runs list --experiment-id "${EXPERIMENT_ID}" # Cetak list run untuk debug
          exit 1
        fi
        echo "RUN_ID=${RUN_ID}" >> $GITHUB_ENV
        echo "Found Run ID: ${RUN_ID}"

    - name: 📤 Upload MLflow Run Directory to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-run-data-${{ env.RUN_ID }}
        path: |
          ./mlruns/${{ env.EXPERIMENT_ID }}/${{ env.RUN_ID }}/
          ./MLProject/artifacts_temp/ 

    - name: 🛠️ Build Docker Image using MLflow
      run: |
        mlflow models build-docker --model-uri "runs:/${{ env.RUN_ID }}/random-forest-model-ci" --name "shopping-trends-ci:latest" --enable-mlserver
        
    - name: 🔐 Log in to Docker Hub
      run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

    - name: 🏷️ Tag Docker Image
      run: |
        docker tag shopping-trends-ci:latest ${{ env.DOCKER_USERNAME }}/shopping-trends-ci:latest

    - name: 🚢 Push Docker Image to Docker Hub
      run: |
        docker push ${{ env.DOCKER_USERNAME }}/shopping-trends-ci:latest

    - name: 📤 Post Log in to Docker Hub (Logout)
      if: always()
      run: docker logout

    - name: 🧹 Post Set up Python
      if: always()
      run: echo "Post Python setup completed."

    - name: 🧹 Post Checkout
      if: always()
      run: echo "Post checkout step completed."

    - name: ✅ Complete Job
      if: always()
      run: echo "CI Workflow for ML and Docker finished successfully."